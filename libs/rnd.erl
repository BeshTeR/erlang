%%% ----------------------------------------------------------------------------
%%% @author Oleg Muraviev <avesh.net@bk.ru>
%%%
%%% @doc Библиотека работы со случайными числами
%%% @end
%%% ----------------------------------------------------------------------------
-module(rnd).

%% API
-export([new/2, elem/1, list/2]).

%% Tests
-include("tests/rnd_tests.erl").

%% -----------------------------------------------------------------------------
%% @doc Случайное целое число из заданного диапазона
%% @end
%% -----------------------------------------------------------------------------
-spec new(M, N) -> Result when
    M      :: integer(),
    N      :: integer(),
    Result :: integer().

new(M, N) when is_integer(M), is_integer(N), M =< N ->
    round((N-M)*rand:uniform()+M).

%% -----------------------------------------------------------------------------
%% @doc Случайный элемент непустого списка
%% @end
%% -----------------------------------------------------------------------------
-spec elem(List) -> Result when
    List   :: [any()],
    Result :: any().

elem(List) when is_list(List), List /= [] ->
    case List of
        [X] -> X;
        _   -> lists:nth(new(1, length(List)))
    end.

%% -----------------------------------------------------------------------------
%% @doc Список M случайных чисел, из диапазона 1 .. N
%% @end
%% -----------------------------------------------------------------------------
-spec list(M, N) -> Result when
    M      :: non_neg_integer(),
    N      :: pos_integer(),
    Result :: [pos_integer()].

list(M, N) when is_integer(M), is_integer(N), M >= 0, N > 0 ->
    [new(1, N) || _ <- lists:seq(1, M)].
